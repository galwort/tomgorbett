name: Build and deploy Python API to Azure Web App

on:
  push:
    branches: [main]
  workflow_dispatch:

env:
  PYTHON_VERSION: "3.10"

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Create virtual environment and install dependencies
        run: |
          python -m venv .venv
          source .venv/bin/activate
          python -m pip install --upgrade pip

          # Install PyTorch explicitly - this should take time
          echo "Installing PyTorch..."
          pip install torch==2.0.1 --extra-index-url https://download.pytorch.org/whl/cpu

          # Install other dependencies
          echo "Installing other dependencies..."
          pip install -r api/requirements.txt

          # Verify PyTorch is installed
          echo "Verifying PyTorch installation..."
          python -c "import torch; print(f'PyTorch version: {torch.__version__}')"

          # Create the site-packages directory in the deployment package
          mkdir -p deployment/site-packages

          # Copy the installed packages to the deployment folder
          cp -r .venv/lib/python3.10/site-packages/* deployment/site-packages/

          # Copy the API code
          mkdir -p deployment/api
          cp -r api/* deployment/api/

          # Create a startup script to use the pre-installed packages
          echo '#!/bin/bash' > deployment/startup.sh
          echo 'export PYTHONPATH=$PYTHONPATH:/home/site/wwwroot/site-packages' >> deployment/startup.sh
          echo 'gunicorn -w 4 -b 0.0.0.0:$PORT api:app' >> deployment/startup.sh
          chmod +x deployment/startup.sh

          # Create the zip file from the deployment folder
          cd deployment
          zip -r ../release.zip .

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: python-app
          path: release.zip

  deploy:
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: Production
      url: ${{ steps.deploy.outputs.webapp-url }}
    permissions:
      id-token: write
      contents: read
    steps:
      - name: Download build artifact
        uses: actions/download-artifact@v4
        with:
          name: python-app

      - name: Log in to Azure
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZUREAPPSERVICE_CLIENTID_781F2029FCF242A7A8F90200DD2EE175 }}
          tenant-id: ${{ secrets.AZUREAPPSERVICE_TENANTID_6DF935C353A14A43BBF4D93BEA39E929 }}
          subscription-id: ${{ secrets.AZUREAPPSERVICE_SUBSCRIPTIONID_88F11AB3B70244838BBB370BF3B6CDEE }}

      - name: Deploy to Azure Web App
        id: deploy
        uses: azure/webapps-deploy@v3
        with:
          app-name: tomgorbett-api
          slot-name: Production
          package: release.zip
          clean: true
          startup-command: |
            ./startup.sh
